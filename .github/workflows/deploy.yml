name: Build and Push Docker Image to GHCR

on:
    workflow_dispatch:
        inputs:
            version:
                description: 'Version to tag the image with'
                required: true
                default: 'latest'
            push_notification:
                description: 'Enabled to send push notification'
                required: true
                type: boolean
                default: true

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Log in to ghio.rc
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and Push Image
              run: |
                  docker build . --tag ghcr.io/${{ github.repository_owner }}/savant-search:${{ inputs.version }}
                  docker push ghcr.io/${{ github.repository_owner}}/savant-search:${{ inputs.version }}

            - name: Deploy to BE Server
              if: inputs.push_notification
              uses: matheusvanzan/sshpass-action@v2
              with:
                  host: ${{ secrets.SERVER_IP }}
                  user: ${{ secrets.SERVER_USER }}
                  pass: ${{ secrets.SERVER_PASS }}
                  run: |
                      MESSAGE="Savant Search: [${{ github.ref_name }}][${{ inputs.version }}] - Auto deploy initiated."
                      curl -s -X POST "https://api.telegram.org/bot${{ vars.TELEGRAM_BOT_TOKEN }}/sendMessage" \
                          -d "chat_id=${{ vars.TELEGRAM_CHAT_ID }}&text=${MESSAGE}"

                      docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
                      cd savant-search
                      docker compose up -d 
                      docker image prune -f

                      MESSAGE="Savant Search: [${{ github.ref_name }}][${{ inputs.version }}] - Deployment successful."
                      curl -s -X POST "https://api.telegram.org/bot${{ vars.TELEGRAM_BOT_TOKEN }}/sendMessage" \
                          -d "chat_id=${{ vars.TELEGRAM_CHAT_ID }}&text=${MESSAGE}"
